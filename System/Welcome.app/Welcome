#!/usr/bin/env python3

# Welcome
# Copyright (c) 2020-21, Simon Peter <probono@puredarwin.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import os, sys, subprocess
from PyQt5.QtCore import QObject, Qt
from PyQt5.QtQml import QQmlApplicationEngine, qmlRegisterType  # sudo pkg install py37-qt5-qml
from PyQt5.QtGui import QIcon, QGuiApplication, QCursor, QPixmap
from PyQt5.QtWidgets import QWizard, QWizardPage, QVBoxLayout, QApplication


class Wizard(QObject):
    def __init__(self, arg):
        print("Hello from within Python")
        subprocess.call(os.path.dirname(__file__) + "/Resources/welcome-wizard.py")
        # TODO: Find a way to fade out music smoothly, then exit
        sys.exit(0)


def runQML():
    app = QGuiApplication(sys.argv)
    qmlRegisterType(Wizard, 'Service', 1, 0, 'Wizard')
    engine = QQmlApplicationEngine()
    app.setWindowIcon(QIcon(os.path.dirname(__file__) + '/Resources/Welcome.png'))
    engine.load(os.path.dirname(__file__) + '/Resources/main.qml')
 
    if not engine.rootObjects():
        return -1
 
    return app.exec_()
    
 
if __name__ == "__main__":
    sys.exit(runQML())
